type engineer_vendor_daemon, domain;
type engineer_vendor_daemon_exec, exec_type, vendor_file_type, file_type;

type engineer_hidl, domain;
type engineer_hidl_exec, exec_type, vendor_file_type, file_type;

type engsensor_hidl, domain;
type engsensor_hidl_exec, exec_type, vendor_file_type, file_type;

type wifi_sniffer, domain;
type wifi_sniffer_exec, exec_type, vendor_file_type, file_type;

type transfer_hidl, domain;
type transfer_hidl_exec, exec_type, vendor_file_type, file_type;

init_daemon_domain(engineer_vendor_daemon)
init_daemon_domain(engineer_hidl)
init_daemon_domain(engsensor_hidl)
init_daemon_domain(wifi_sniffer)
init_daemon_domain(transfer_hidl)

get_prop(engineer_vendor_daemon, hwservicemanager_prop)
get_prop(engineer_hidl, hwservicemanager_prop)
get_prop(engsensor_hidl, hwservicemanager_prop)
get_prop(wifi_sniffer, hwservicemanager_prop)
get_prop(transfer_hidl, hwservicemanager_prop)

set_prop(engineer_hidl, engineer_vendor_prop)

add_hwservice(engineer_hidl, oplus_hal_engineer_hwservice)
hwbinder_use(engineer_hidl)
add_hwservice(engsensor_hidl, oplus_hal_engsensor_hwservice)
hwbinder_use(engsensor_hidl)
add_hwservice(hal_cryptoeng_oplus, hal_cryptoeng_hwservice)
hwbinder_use(hal_cryptoeng_oplus)

allow engineer_hidl block_device:dir search;
allow engineer_hidl oplus_block_device:blk_file { open read };
allow engineer_hidl mnt_vendor_file:dir rw_dir_perms;
allow engineer_hidl mnt_vendor_file:file rw_file_perms;

allow engsensor_hidl block_device:dir search;
allow engsensor_hidl vendor_persist_sensors_file:dir r_dir_perms;
allow engsensor_hidl vendor_persist_sensors_file:file rw_file_perms;
allow engsensor_hidl mnt_vendor_file:dir rw_dir_perms;
allow engsensor_hidl oplus_block_device:blk_file { open read };
allow engsensor_hidl proc_oplus_extra:dir r_dir_perms;
allow engsensor_hidl proc_oplus_extra:file rw_file_perms;
